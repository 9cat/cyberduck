/*
 * DRACOON
 * Version 4.4.0 - built at: 2017-12-04 04:14:43, API server: https://demo.dracoon.com/api/v4
 *
 * OpenAPI spec version: 4.4.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ch.cyberduck.core.sds.io.swagger.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * UpdateOpenIdIdpConfigRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-05-03T10:55:56.129+02:00")
public class UpdateOpenIdIdpConfigRequest {
  @JsonProperty("name")
  private String name = null;

  @JsonProperty("issuer")
  private String issuer = null;

  @JsonProperty("authorizationEndPointUrl")
  private String authorizationEndPointUrl = null;

  @JsonProperty("tokenEndPointUrl")
  private String tokenEndPointUrl = null;

  @JsonProperty("userInfoEndPointUrl")
  private String userInfoEndPointUrl = null;

  @JsonProperty("jwksEndPointUrl")
  private String jwksEndPointUrl = null;

  @JsonProperty("clientId")
  private String clientId = null;

  @JsonProperty("clientSecret")
  private String clientSecret = null;

  @JsonProperty("scopes")
  private List<String> scopes = null;

  @JsonProperty("redirectUris")
  private List<String> redirectUris = null;

  @JsonProperty("pkceEnabled")
  private Boolean pkceEnabled = null;

  @JsonProperty("pkceChallengeMethod")
  private String pkceChallengeMethod = null;

  @JsonProperty("mappingClaim")
  private String mappingClaim = null;

  @JsonProperty("fallbackMappingClaim")
  private String fallbackMappingClaim = null;

  @JsonProperty("userUpdateEnabled")
  private Boolean userUpdateEnabled = null;

  public UpdateOpenIdIdpConfigRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of the IDP.
   * @return name
  **/
  @ApiModelProperty(value = "Name of the IDP.")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public UpdateOpenIdIdpConfigRequest issuer(String issuer) {
    this.issuer = issuer;
    return this;
  }

   /**
   * Issuer identifier of the IDP. (The value is a case sensitive URL.)
   * @return issuer
  **/
  @ApiModelProperty(value = "Issuer identifier of the IDP. (The value is a case sensitive URL.)")
  public String getIssuer() {
    return issuer;
  }

  public void setIssuer(String issuer) {
    this.issuer = issuer;
  }

  public UpdateOpenIdIdpConfigRequest authorizationEndPointUrl(String authorizationEndPointUrl) {
    this.authorizationEndPointUrl = authorizationEndPointUrl;
    return this;
  }

   /**
   * URL of the Authorization Endpoint.
   * @return authorizationEndPointUrl
  **/
  @ApiModelProperty(value = "URL of the Authorization Endpoint.")
  public String getAuthorizationEndPointUrl() {
    return authorizationEndPointUrl;
  }

  public void setAuthorizationEndPointUrl(String authorizationEndPointUrl) {
    this.authorizationEndPointUrl = authorizationEndPointUrl;
  }

  public UpdateOpenIdIdpConfigRequest tokenEndPointUrl(String tokenEndPointUrl) {
    this.tokenEndPointUrl = tokenEndPointUrl;
    return this;
  }

   /**
   * URL of the Token Endpoint.
   * @return tokenEndPointUrl
  **/
  @ApiModelProperty(value = "URL of the Token Endpoint.")
  public String getTokenEndPointUrl() {
    return tokenEndPointUrl;
  }

  public void setTokenEndPointUrl(String tokenEndPointUrl) {
    this.tokenEndPointUrl = tokenEndPointUrl;
  }

  public UpdateOpenIdIdpConfigRequest userInfoEndPointUrl(String userInfoEndPointUrl) {
    this.userInfoEndPointUrl = userInfoEndPointUrl;
    return this;
  }

   /**
   * URL of the User Info Endpoint.
   * @return userInfoEndPointUrl
  **/
  @ApiModelProperty(value = "URL of the User Info Endpoint.")
  public String getUserInfoEndPointUrl() {
    return userInfoEndPointUrl;
  }

  public void setUserInfoEndPointUrl(String userInfoEndPointUrl) {
    this.userInfoEndPointUrl = userInfoEndPointUrl;
  }

  public UpdateOpenIdIdpConfigRequest jwksEndPointUrl(String jwksEndPointUrl) {
    this.jwksEndPointUrl = jwksEndPointUrl;
    return this;
  }

   /**
   * URL of the JWKS Endpoint.
   * @return jwksEndPointUrl
  **/
  @ApiModelProperty(value = "URL of the JWKS Endpoint.")
  public String getJwksEndPointUrl() {
    return jwksEndPointUrl;
  }

  public void setJwksEndPointUrl(String jwksEndPointUrl) {
    this.jwksEndPointUrl = jwksEndPointUrl;
  }

  public UpdateOpenIdIdpConfigRequest clientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * Client ID.
   * @return clientId
  **/
  @ApiModelProperty(value = "Client ID.")
  public String getClientId() {
    return clientId;
  }

  public void setClientId(String clientId) {
    this.clientId = clientId;
  }

  public UpdateOpenIdIdpConfigRequest clientSecret(String clientSecret) {
    this.clientSecret = clientSecret;
    return this;
  }

   /**
   * Client Secret.
   * @return clientSecret
  **/
  @ApiModelProperty(value = "Client Secret.")
  public String getClientSecret() {
    return clientSecret;
  }

  public void setClientSecret(String clientSecret) {
    this.clientSecret = clientSecret;
  }

  public UpdateOpenIdIdpConfigRequest scopes(List<String> scopes) {
    this.scopes = scopes;
    return this;
  }

  public UpdateOpenIdIdpConfigRequest addScopesItem(String scopesItem) {
    if (this.scopes == null) {
      this.scopes = new ArrayList<String>();
    }
    this.scopes.add(scopesItem);
    return this;
  }

   /**
   * List of requested scopes. (Usually &#39;openid&#39; and the names of the requested claims.))
   * @return scopes
  **/
  @ApiModelProperty(value = "List of requested scopes. (Usually 'openid' and the names of the requested claims.))")
  public List<String> getScopes() {
    return scopes;
  }

  public void setScopes(List<String> scopes) {
    this.scopes = scopes;
  }

  public UpdateOpenIdIdpConfigRequest redirectUris(List<String> redirectUris) {
    this.redirectUris = redirectUris;
    return this;
  }

  public UpdateOpenIdIdpConfigRequest addRedirectUrisItem(String redirectUrisItem) {
    if (this.redirectUris == null) {
      this.redirectUris = new ArrayList<String>();
    }
    this.redirectUris.add(redirectUrisItem);
    return this;
  }

   /**
   * List of redirection URIs.
   * @return redirectUris
  **/
  @ApiModelProperty(value = "List of redirection URIs.")
  public List<String> getRedirectUris() {
    return redirectUris;
  }

  public void setRedirectUris(List<String> redirectUris) {
    this.redirectUris = redirectUris;
  }

  public UpdateOpenIdIdpConfigRequest pkceEnabled(Boolean pkceEnabled) {
    this.pkceEnabled = pkceEnabled;
    return this;
  }

   /**
   * Determines whether PKCE is enabled. See &lt;a href&#x3D;&#39;https://tools.ietf.org/html/rfc7636&#39;&gt;RFC 7636&lt;/a&gt;.
   * @return pkceEnabled
  **/
  @ApiModelProperty(value = "Determines whether PKCE is enabled. See <a href='https://tools.ietf.org/html/rfc7636'>RFC 7636</a>.")
  public Boolean getPkceEnabled() {
    return pkceEnabled;
  }

  public void setPkceEnabled(Boolean pkceEnabled) {
    this.pkceEnabled = pkceEnabled;
  }

  public UpdateOpenIdIdpConfigRequest pkceChallengeMethod(String pkceChallengeMethod) {
    this.pkceChallengeMethod = pkceChallengeMethod;
    return this;
  }

   /**
   * PKCE code challenge method. See &lt;a href&#x3D;&#39;https://tools.ietf.org/html/rfc7636&#39;&gt;RFC 7636&lt;/a&gt;.
   * @return pkceChallengeMethod
  **/
  @ApiModelProperty(value = "PKCE code challenge method. See <a href='https://tools.ietf.org/html/rfc7636'>RFC 7636</a>.")
  public String getPkceChallengeMethod() {
    return pkceChallengeMethod;
  }

  public void setPkceChallengeMethod(String pkceChallengeMethod) {
    this.pkceChallengeMethod = pkceChallengeMethod;
  }

  public UpdateOpenIdIdpConfigRequest mappingClaim(String mappingClaim) {
    this.mappingClaim = mappingClaim;
    return this;
  }

   /**
   * Name of the claim which is used for the user mapping. (E.g. &#39;email&#39;.)
   * @return mappingClaim
  **/
  @ApiModelProperty(value = "Name of the claim which is used for the user mapping. (E.g. 'email'.)")
  public String getMappingClaim() {
    return mappingClaim;
  }

  public void setMappingClaim(String mappingClaim) {
    this.mappingClaim = mappingClaim;
  }

  public UpdateOpenIdIdpConfigRequest fallbackMappingClaim(String fallbackMappingClaim) {
    this.fallbackMappingClaim = fallbackMappingClaim;
    return this;
  }

   /**
   * Name of the claim which is used for the user mapping fallback. (E.g. &#39;sub&#39;.)
   * @return fallbackMappingClaim
  **/
  @ApiModelProperty(value = "Name of the claim which is used for the user mapping fallback. (E.g. 'sub'.)")
  public String getFallbackMappingClaim() {
    return fallbackMappingClaim;
  }

  public void setFallbackMappingClaim(String fallbackMappingClaim) {
    this.fallbackMappingClaim = fallbackMappingClaim;
  }

  public UpdateOpenIdIdpConfigRequest userUpdateEnabled(Boolean userUpdateEnabled) {
    this.userUpdateEnabled = userUpdateEnabled;
    return this;
  }

   /**
   * Determines if the user metadata is updated with data from the IDP. The scope &#39;profile&#39; is needed for the update. If this scope is not granted, only the email address is updated.
   * @return userUpdateEnabled
  **/
  @ApiModelProperty(value = "Determines if the user metadata is updated with data from the IDP. The scope 'profile' is needed for the update. If this scope is not granted, only the email address is updated.")
  public Boolean getUserUpdateEnabled() {
    return userUpdateEnabled;
  }

  public void setUserUpdateEnabled(Boolean userUpdateEnabled) {
    this.userUpdateEnabled = userUpdateEnabled;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    UpdateOpenIdIdpConfigRequest updateOpenIdIdpConfigRequest = (UpdateOpenIdIdpConfigRequest) o;
    return Objects.equals(this.name, updateOpenIdIdpConfigRequest.name) &&
        Objects.equals(this.issuer, updateOpenIdIdpConfigRequest.issuer) &&
        Objects.equals(this.authorizationEndPointUrl, updateOpenIdIdpConfigRequest.authorizationEndPointUrl) &&
        Objects.equals(this.tokenEndPointUrl, updateOpenIdIdpConfigRequest.tokenEndPointUrl) &&
        Objects.equals(this.userInfoEndPointUrl, updateOpenIdIdpConfigRequest.userInfoEndPointUrl) &&
        Objects.equals(this.jwksEndPointUrl, updateOpenIdIdpConfigRequest.jwksEndPointUrl) &&
        Objects.equals(this.clientId, updateOpenIdIdpConfigRequest.clientId) &&
        Objects.equals(this.clientSecret, updateOpenIdIdpConfigRequest.clientSecret) &&
        Objects.equals(this.scopes, updateOpenIdIdpConfigRequest.scopes) &&
        Objects.equals(this.redirectUris, updateOpenIdIdpConfigRequest.redirectUris) &&
        Objects.equals(this.pkceEnabled, updateOpenIdIdpConfigRequest.pkceEnabled) &&
        Objects.equals(this.pkceChallengeMethod, updateOpenIdIdpConfigRequest.pkceChallengeMethod) &&
        Objects.equals(this.mappingClaim, updateOpenIdIdpConfigRequest.mappingClaim) &&
        Objects.equals(this.fallbackMappingClaim, updateOpenIdIdpConfigRequest.fallbackMappingClaim) &&
        Objects.equals(this.userUpdateEnabled, updateOpenIdIdpConfigRequest.userUpdateEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, issuer, authorizationEndPointUrl, tokenEndPointUrl, userInfoEndPointUrl, jwksEndPointUrl, clientId, clientSecret, scopes, redirectUris, pkceEnabled, pkceChallengeMethod, mappingClaim, fallbackMappingClaim, userUpdateEnabled);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class UpdateOpenIdIdpConfigRequest {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    issuer: ").append(toIndentedString(issuer)).append("\n");
    sb.append("    authorizationEndPointUrl: ").append(toIndentedString(authorizationEndPointUrl)).append("\n");
    sb.append("    tokenEndPointUrl: ").append(toIndentedString(tokenEndPointUrl)).append("\n");
    sb.append("    userInfoEndPointUrl: ").append(toIndentedString(userInfoEndPointUrl)).append("\n");
    sb.append("    jwksEndPointUrl: ").append(toIndentedString(jwksEndPointUrl)).append("\n");
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    clientSecret: ").append(toIndentedString(clientSecret)).append("\n");
    sb.append("    scopes: ").append(toIndentedString(scopes)).append("\n");
    sb.append("    redirectUris: ").append(toIndentedString(redirectUris)).append("\n");
    sb.append("    pkceEnabled: ").append(toIndentedString(pkceEnabled)).append("\n");
    sb.append("    pkceChallengeMethod: ").append(toIndentedString(pkceChallengeMethod)).append("\n");
    sb.append("    mappingClaim: ").append(toIndentedString(mappingClaim)).append("\n");
    sb.append("    fallbackMappingClaim: ").append(toIndentedString(fallbackMappingClaim)).append("\n");
    sb.append("    userUpdateEnabled: ").append(toIndentedString(userUpdateEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

