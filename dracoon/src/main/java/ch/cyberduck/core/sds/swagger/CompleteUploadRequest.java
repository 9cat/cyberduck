/*
 * Secure Data Space API
 * Version 4.2.0-SNAPSHOT - built at: 2017-06-29 20:50:38, API server: https://duck.ssp-europe.eu/api/v4
 *
 * OpenAPI spec version: 4.2.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ch.cyberduck.core.sds.swagger;

/*
 * Copyright (c) 2002-2017 iterate GmbH. All rights reserved.
 * https://cyberduck.io/
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

import ch.cyberduck.core.sds.io.swagger.client.model.FileKey;
import ch.cyberduck.core.sds.io.swagger.client.model.UserFileKeyList;

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;

/**
 * CompleteUploadRequest
 */
public class CompleteUploadRequest {
    /**
     * File name conflict resolution strategy. (default: autorename)
     */
    public enum ResolutionStrategyEnum {
        @JsonProperty("autorename")
        AUTORENAME("autorename"),

        @JsonProperty("fail")
        FAIL("fail"),

        @JsonProperty("overwrite")
        OVERWRITE("overwrite");

        private String value;

        ResolutionStrategyEnum(String value) {
            this.value = value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static ResolutionStrategyEnum fromValue(String text) {
            for(ResolutionStrategyEnum b : ResolutionStrategyEnum.values()) {
                if(String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }
    }

    @JsonProperty("resolutionStrategy")
    private ResolutionStrategyEnum resolutionStrategy = null;

    @JsonProperty("keepShareLinks")
    private Boolean keepShareLinks = null;

    @JsonProperty("fileName")
    private String fileName = null;

    @JsonProperty("fileKey")
    private FileKey fileKey = null;

    @JsonProperty("userFileKeyList")
    private UserFileKeyList userFileKeyList = null;

    public CompleteUploadRequest resolutionStrategy(ResolutionStrategyEnum resolutionStrategy) {
        this.resolutionStrategy = resolutionStrategy;
        return this;
    }

    /**
     * File name conflict resolution strategy. (default: autorename)
     *
     * @return resolutionStrategy
     **/
    @ApiModelProperty(example = "null", value = "File name conflict resolution strategy. (default: autorename)")
    public ResolutionStrategyEnum getResolutionStrategy() {
        return resolutionStrategy;
    }

    public void setResolutionStrategy(ResolutionStrategyEnum resolutionStrategy) {
        this.resolutionStrategy = resolutionStrategy;
    }

    public CompleteUploadRequest keepShareLinks(Boolean keepShareLinks) {
        this.keepShareLinks = keepShareLinks;
        return this;
    }

    /**
     * Preserve download share links and point them to the new node. default: false.
     *
     * @return keepShareLinks
     **/
    @ApiModelProperty(example = "null", value = "Preserve download share links and point them to the new node. default: false.")
    public Boolean getKeepShareLinks() {
        return keepShareLinks;
    }

    public void setKeepShareLinks(Boolean keepShareLinks) {
        this.keepShareLinks = keepShareLinks;
    }

    public CompleteUploadRequest fileName(String fileName) {
        this.fileName = fileName;
        return this;
    }

    /**
     * New file name to store with
     *
     * @return fileName
     **/
    @ApiModelProperty(example = "null", value = "New file name to store with")
    public String getFileName() {
        return fileName;
    }

    public void setFileName(String fileName) {
        this.fileName = fileName;
    }

    public CompleteUploadRequest fileKey(FileKey fileKey) {
        this.fileKey = fileKey;
        return this;
    }

    /**
     * File key for this user; mandatory for uploads into encrypted rooms
     *
     * @return fileKey
     **/
    @ApiModelProperty(example = "null", value = "File key for this user; mandatory for uploads into encrypted rooms")
    public FileKey getFileKey() {
        return fileKey;
    }

    public void setFileKey(FileKey fileKey) {
        this.fileKey = fileKey;
    }

    public CompleteUploadRequest userFileKeyList(UserFileKeyList userFileKeyList) {
        this.userFileKeyList = userFileKeyList;
        return this;
    }

    /**
     * List of Filekeys for Users; mandatory for uploads by public shares into encrypted rooms
     *
     * @return userFileKeyList
     **/
    @ApiModelProperty(example = "null", value = "List of Filekeys for Users; mandatory for uploads by public shares into encrypted rooms ")
    public UserFileKeyList getUserFileKeyList() {
        return userFileKeyList;
    }

    public void setUserFileKeyList(UserFileKeyList userFileKeyList) {
        this.userFileKeyList = userFileKeyList;
    }


    @Override
    public boolean equals(Object o) {
        if(this == o) {
            return true;
        }
        if(o == null || getClass() != o.getClass()) {
            return false;
        }
        CompleteUploadRequest completeUploadRequest = (CompleteUploadRequest) o;
        return Objects.equals(this.resolutionStrategy, completeUploadRequest.resolutionStrategy) &&
                Objects.equals(this.keepShareLinks, completeUploadRequest.keepShareLinks) &&
                Objects.equals(this.fileName, completeUploadRequest.fileName) &&
                Objects.equals(this.fileKey, completeUploadRequest.fileKey) &&
                Objects.equals(this.userFileKeyList, completeUploadRequest.userFileKeyList);
    }

    @Override
    public int hashCode() {
        return Objects.hash(resolutionStrategy, keepShareLinks, fileName, fileKey, userFileKeyList);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CompleteUploadRequest {\n");

        sb.append("    resolutionStrategy: ").append(toIndentedString(resolutionStrategy)).append("\n");
        sb.append("    keepShareLinks: ").append(toIndentedString(keepShareLinks)).append("\n");
        sb.append("    fileName: ").append(toIndentedString(fileName)).append("\n");
        sb.append("    fileKey: ").append(toIndentedString(fileKey)).append("\n");
        sb.append("    userFileKeyList: ").append(toIndentedString(userFileKeyList)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if(o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

