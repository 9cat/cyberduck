/*
 * DRACOON
 * Version 4.4.0 - built at: 2017-12-04 04:14:43, API server: https://demo.dracoon.com/api/v4
 *
 * OpenAPI spec version: 4.4.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ch.cyberduck.core.sds.io.swagger.client.model;

import java.util.Objects;
import ch.cyberduck.core.sds.io.swagger.client.model.AuditUserPermission;
import ch.cyberduck.core.sds.io.swagger.client.model.UserInfo;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * AuditNodeResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2018-05-03T10:55:56.129+02:00")
public class AuditNodeResponse {
  @JsonProperty("nodeId")
  private Long nodeId = null;

  @JsonProperty("nodeParentId")
  private Long nodeParentId = null;

  @JsonProperty("nodeName")
  private String nodeName = null;

  @JsonProperty("nodeParentPath")
  private String nodeParentPath = null;

  @JsonProperty("nodeCntChildren")
  private Integer nodeCntChildren = null;

  @JsonProperty("nodeSize")
  private Long nodeSize = null;

  @JsonProperty("nodeHasRecycleBin")
  private Boolean nodeHasRecycleBin = null;

  @JsonProperty("nodeRecycleBinRetentionPeriod")
  private Integer nodeRecycleBinRetentionPeriod = null;

  @JsonProperty("nodeQuota")
  private Long nodeQuota = null;

  @JsonProperty("nodeIsEncrypted")
  private Boolean nodeIsEncrypted = null;

  @JsonProperty("nodeCreatedAt")
  private java.util.Date nodeCreatedAt = null;

  @JsonProperty("nodeCreatedBy")
  private UserInfo nodeCreatedBy = null;

  @JsonProperty("nodeUpdatedAt")
  private java.util.Date nodeUpdatedAt = null;

  @JsonProperty("nodeUpdatedBy")
  private UserInfo nodeUpdatedBy = null;

  @JsonProperty("auditUserPermissionList")
  private List<AuditUserPermission> auditUserPermissionList = new ArrayList<AuditUserPermission>();

  public AuditNodeResponse nodeId(Long nodeId) {
    this.nodeId = nodeId;
    return this;
  }

   /**
   * Node ID
   * @return nodeId
  **/
  @ApiModelProperty(required = true, value = "Node ID")
  public Long getNodeId() {
    return nodeId;
  }

  public void setNodeId(Long nodeId) {
    this.nodeId = nodeId;
  }

  public AuditNodeResponse nodeParentId(Long nodeParentId) {
    this.nodeParentId = nodeParentId;
    return this;
  }

   /**
   * Parent Node ID
   * @return nodeParentId
  **/
  @ApiModelProperty(value = "Parent Node ID")
  public Long getNodeParentId() {
    return nodeParentId;
  }

  public void setNodeParentId(Long nodeParentId) {
    this.nodeParentId = nodeParentId;
  }

  public AuditNodeResponse nodeName(String nodeName) {
    this.nodeName = nodeName;
    return this;
  }

   /**
   * Node name
   * @return nodeName
  **/
  @ApiModelProperty(required = true, value = "Node name")
  public String getNodeName() {
    return nodeName;
  }

  public void setNodeName(String nodeName) {
    this.nodeName = nodeName;
  }

  public AuditNodeResponse nodeParentPath(String nodeParentPath) {
    this.nodeParentPath = nodeParentPath;
    return this;
  }

   /**
   * Parent Node path. &#39;/&#39; if node is a Root node (Room)
   * @return nodeParentPath
  **/
  @ApiModelProperty(required = true, value = "Parent Node path. '/' if node is a Root node (Room)")
  public String getNodeParentPath() {
    return nodeParentPath;
  }

  public void setNodeParentPath(String nodeParentPath) {
    this.nodeParentPath = nodeParentPath;
  }

  public AuditNodeResponse nodeCntChildren(Integer nodeCntChildren) {
    this.nodeCntChildren = nodeCntChildren;
    return this;
  }

   /**
   * Number of direct children (no recursion)
   * @return nodeCntChildren
  **/
  @ApiModelProperty(required = true, value = "Number of direct children (no recursion)")
  public Integer getNodeCntChildren() {
    return nodeCntChildren;
  }

  public void setNodeCntChildren(Integer nodeCntChildren) {
    this.nodeCntChildren = nodeCntChildren;
  }

  public AuditNodeResponse nodeSize(Long nodeSize) {
    this.nodeSize = nodeSize;
    return this;
  }

   /**
   * Node size in Byte
   * @return nodeSize
  **/
  @ApiModelProperty(value = "Node size in Byte")
  public Long getNodeSize() {
    return nodeSize;
  }

  public void setNodeSize(Long nodeSize) {
    this.nodeSize = nodeSize;
  }

  public AuditNodeResponse nodeHasRecycleBin(Boolean nodeHasRecycleBin) {
    this.nodeHasRecycleBin = nodeHasRecycleBin;
    return this;
  }

   /**
   * Is Recycle Bin active
   * @return nodeHasRecycleBin
  **/
  @ApiModelProperty(value = "Is Recycle Bin active")
  public Boolean getNodeHasRecycleBin() {
    return nodeHasRecycleBin;
  }

  public void setNodeHasRecycleBin(Boolean nodeHasRecycleBin) {
    this.nodeHasRecycleBin = nodeHasRecycleBin;
  }

  public AuditNodeResponse nodeRecycleBinRetentionPeriod(Integer nodeRecycleBinRetentionPeriod) {
    this.nodeRecycleBinRetentionPeriod = nodeRecycleBinRetentionPeriod;
    return this;
  }

   /**
   * Retention period for deleted nodes in days. Integer between 0 and 9999
   * @return nodeRecycleBinRetentionPeriod
  **/
  @ApiModelProperty(value = "Retention period for deleted nodes in days. Integer between 0 and 9999")
  public Integer getNodeRecycleBinRetentionPeriod() {
    return nodeRecycleBinRetentionPeriod;
  }

  public void setNodeRecycleBinRetentionPeriod(Integer nodeRecycleBinRetentionPeriod) {
    this.nodeRecycleBinRetentionPeriod = nodeRecycleBinRetentionPeriod;
  }

  public AuditNodeResponse nodeQuota(Long nodeQuota) {
    this.nodeQuota = nodeQuota;
    return this;
  }

   /**
   * Quota in Byte
   * @return nodeQuota
  **/
  @ApiModelProperty(value = "Quota in Byte")
  public Long getNodeQuota() {
    return nodeQuota;
  }

  public void setNodeQuota(Long nodeQuota) {
    this.nodeQuota = nodeQuota;
  }

  public AuditNodeResponse nodeIsEncrypted(Boolean nodeIsEncrypted) {
    this.nodeIsEncrypted = nodeIsEncrypted;
    return this;
  }

   /**
   * Encryption state.
   * @return nodeIsEncrypted
  **/
  @ApiModelProperty(value = "Encryption state.")
  public Boolean getNodeIsEncrypted() {
    return nodeIsEncrypted;
  }

  public void setNodeIsEncrypted(Boolean nodeIsEncrypted) {
    this.nodeIsEncrypted = nodeIsEncrypted;
  }

  public AuditNodeResponse nodeCreatedAt(java.util.Date nodeCreatedAt) {
    this.nodeCreatedAt = nodeCreatedAt;
    return this;
  }

   /**
   * Creation date (2015-12-31T23:59:00)
   * @return nodeCreatedAt
  **/
  @ApiModelProperty(value = "Creation date (2015-12-31T23:59:00)")
  public java.util.Date getNodeCreatedAt() {
    return nodeCreatedAt;
  }

  public void setNodeCreatedAt(java.util.Date nodeCreatedAt) {
    this.nodeCreatedAt = nodeCreatedAt;
  }

  public AuditNodeResponse nodeCreatedBy(UserInfo nodeCreatedBy) {
    this.nodeCreatedBy = nodeCreatedBy;
    return this;
  }

   /**
   * Created by user info
   * @return nodeCreatedBy
  **/
  @ApiModelProperty(value = "Created by user info")
  public UserInfo getNodeCreatedBy() {
    return nodeCreatedBy;
  }

  public void setNodeCreatedBy(UserInfo nodeCreatedBy) {
    this.nodeCreatedBy = nodeCreatedBy;
  }

  public AuditNodeResponse nodeUpdatedAt(java.util.Date nodeUpdatedAt) {
    this.nodeUpdatedAt = nodeUpdatedAt;
    return this;
  }

   /**
   * Modification date (2015-12-31T23:59:00)
   * @return nodeUpdatedAt
  **/
  @ApiModelProperty(value = "Modification date (2015-12-31T23:59:00)")
  public java.util.Date getNodeUpdatedAt() {
    return nodeUpdatedAt;
  }

  public void setNodeUpdatedAt(java.util.Date nodeUpdatedAt) {
    this.nodeUpdatedAt = nodeUpdatedAt;
  }

  public AuditNodeResponse nodeUpdatedBy(UserInfo nodeUpdatedBy) {
    this.nodeUpdatedBy = nodeUpdatedBy;
    return this;
  }

   /**
   * Modified by user info
   * @return nodeUpdatedBy
  **/
  @ApiModelProperty(value = "Modified by user info")
  public UserInfo getNodeUpdatedBy() {
    return nodeUpdatedBy;
  }

  public void setNodeUpdatedBy(UserInfo nodeUpdatedBy) {
    this.nodeUpdatedBy = nodeUpdatedBy;
  }

  public AuditNodeResponse auditUserPermissionList(List<AuditUserPermission> auditUserPermissionList) {
    this.auditUserPermissionList = auditUserPermissionList;
    return this;
  }

  public AuditNodeResponse addAuditUserPermissionListItem(AuditUserPermission auditUserPermissionListItem) {
    this.auditUserPermissionList.add(auditUserPermissionListItem);
    return this;
  }

   /**
   * List of assigned users with permissions
   * @return auditUserPermissionList
  **/
  @ApiModelProperty(required = true, value = "List of assigned users with permissions")
  public List<AuditUserPermission> getAuditUserPermissionList() {
    return auditUserPermissionList;
  }

  public void setAuditUserPermissionList(List<AuditUserPermission> auditUserPermissionList) {
    this.auditUserPermissionList = auditUserPermissionList;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AuditNodeResponse auditNodeResponse = (AuditNodeResponse) o;
    return Objects.equals(this.nodeId, auditNodeResponse.nodeId) &&
        Objects.equals(this.nodeParentId, auditNodeResponse.nodeParentId) &&
        Objects.equals(this.nodeName, auditNodeResponse.nodeName) &&
        Objects.equals(this.nodeParentPath, auditNodeResponse.nodeParentPath) &&
        Objects.equals(this.nodeCntChildren, auditNodeResponse.nodeCntChildren) &&
        Objects.equals(this.nodeSize, auditNodeResponse.nodeSize) &&
        Objects.equals(this.nodeHasRecycleBin, auditNodeResponse.nodeHasRecycleBin) &&
        Objects.equals(this.nodeRecycleBinRetentionPeriod, auditNodeResponse.nodeRecycleBinRetentionPeriod) &&
        Objects.equals(this.nodeQuota, auditNodeResponse.nodeQuota) &&
        Objects.equals(this.nodeIsEncrypted, auditNodeResponse.nodeIsEncrypted) &&
        Objects.equals(this.nodeCreatedAt, auditNodeResponse.nodeCreatedAt) &&
        Objects.equals(this.nodeCreatedBy, auditNodeResponse.nodeCreatedBy) &&
        Objects.equals(this.nodeUpdatedAt, auditNodeResponse.nodeUpdatedAt) &&
        Objects.equals(this.nodeUpdatedBy, auditNodeResponse.nodeUpdatedBy) &&
        Objects.equals(this.auditUserPermissionList, auditNodeResponse.auditUserPermissionList);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nodeId, nodeParentId, nodeName, nodeParentPath, nodeCntChildren, nodeSize, nodeHasRecycleBin, nodeRecycleBinRetentionPeriod, nodeQuota, nodeIsEncrypted, nodeCreatedAt, nodeCreatedBy, nodeUpdatedAt, nodeUpdatedBy, auditUserPermissionList);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AuditNodeResponse {\n");
    
    sb.append("    nodeId: ").append(toIndentedString(nodeId)).append("\n");
    sb.append("    nodeParentId: ").append(toIndentedString(nodeParentId)).append("\n");
    sb.append("    nodeName: ").append(toIndentedString(nodeName)).append("\n");
    sb.append("    nodeParentPath: ").append(toIndentedString(nodeParentPath)).append("\n");
    sb.append("    nodeCntChildren: ").append(toIndentedString(nodeCntChildren)).append("\n");
    sb.append("    nodeSize: ").append(toIndentedString(nodeSize)).append("\n");
    sb.append("    nodeHasRecycleBin: ").append(toIndentedString(nodeHasRecycleBin)).append("\n");
    sb.append("    nodeRecycleBinRetentionPeriod: ").append(toIndentedString(nodeRecycleBinRetentionPeriod)).append("\n");
    sb.append("    nodeQuota: ").append(toIndentedString(nodeQuota)).append("\n");
    sb.append("    nodeIsEncrypted: ").append(toIndentedString(nodeIsEncrypted)).append("\n");
    sb.append("    nodeCreatedAt: ").append(toIndentedString(nodeCreatedAt)).append("\n");
    sb.append("    nodeCreatedBy: ").append(toIndentedString(nodeCreatedBy)).append("\n");
    sb.append("    nodeUpdatedAt: ").append(toIndentedString(nodeUpdatedAt)).append("\n");
    sb.append("    nodeUpdatedBy: ").append(toIndentedString(nodeUpdatedBy)).append("\n");
    sb.append("    auditUserPermissionList: ").append(toIndentedString(auditUserPermissionList)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

