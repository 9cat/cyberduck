/*
 * Secure Data Space API
 * Version 4.1.2 - built at: 2017-03-02 18:50:25, API server: https://sds.ssp-europe.eu/api/v4
 *
 * OpenAPI spec version: 4.1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ch.cyberduck.core.sds.io.swagger.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.util.ArrayList;
import java.util.List;

/**
 * OAuthClient
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-21T19:15:03.115+01:00")
public class OAuthClient {
  @JsonProperty("clientId")
  private String clientId = null;

  @JsonProperty("clientSecret")
  private String clientSecret = null;

  @JsonProperty("grantTypes")
  private List<String> grantTypes = new ArrayList<String>();

  @JsonProperty("redirectUrl")
  private String redirectUrl = null;

  @JsonProperty("accessTokenValidity")
  private Integer accessTokenValidity = null;

  @JsonProperty("refreshTokenValidity")
  private Integer refreshTokenValidity = null;

  public OAuthClient clientId(String clientId) {
    this.clientId = clientId;
    return this;
  }

   /**
   * ID of the OAuth client.
   * @return clientId
  **/
  @ApiModelProperty(example = "null", required = true, value = "ID of the OAuth client.")
  public String getClientId() {
    return clientId;
  }

  public void setClientId(String clientId) {
    this.clientId = clientId;
  }

  public OAuthClient clientSecret(String clientSecret) {
    this.clientSecret = clientSecret;
    return this;
  }

   /**
   * Secret, which uses the client for authentication.
   * @return clientSecret
  **/
  @ApiModelProperty(example = "null", value = "Secret, which uses the client for authentication.")
  public String getClientSecret() {
    return clientSecret;
  }

  public void setClientSecret(String clientSecret) {
    this.clientSecret = clientSecret;
  }

  public OAuthClient grantTypes(List<String> grantTypes) {
    this.grantTypes = grantTypes;
    return this;
  }

  public OAuthClient addGrantTypesItem(String grantTypesItem) {
    this.grantTypes.add(grantTypesItem);
    return this;
  }

   /**
   * Authorized grant types. See <a href='https://tools.ietf.org/html/rfc6749'>RFC 6749</a>.
   * @return grantTypes
  **/
  @ApiModelProperty(example = "null", value = "Authorized grant types. See <a href='https://tools.ietf.org/html/rfc6749'>RFC 6749</a>.")
  public List<String> getGrantTypes() {
    return grantTypes;
  }

  public void setGrantTypes(List<String> grantTypes) {
    this.grantTypes = grantTypes;
  }

  public OAuthClient redirectUrl(String redirectUrl) {
    this.redirectUrl = redirectUrl;
    return this;
  }

   /**
   * Url, to which a user is redirected after authorization.
   * @return redirectUrl
  **/
  @ApiModelProperty(example = "null", value = "Url, to which a user is redirected after authorization.")
  public String getRedirectUrl() {
    return redirectUrl;
  }

  public void setRedirectUrl(String redirectUrl) {
    this.redirectUrl = redirectUrl;
  }

  public OAuthClient accessTokenValidity(Integer accessTokenValidity) {
    this.accessTokenValidity = accessTokenValidity;
    return this;
  }

   /**
   * Validity of the access token in seconds.
   * @return accessTokenValidity
  **/
  @ApiModelProperty(example = "null", value = "Validity of the access token in seconds.")
  public Integer getAccessTokenValidity() {
    return accessTokenValidity;
  }

  public void setAccessTokenValidity(Integer accessTokenValidity) {
    this.accessTokenValidity = accessTokenValidity;
  }

  public OAuthClient refreshTokenValidity(Integer refreshTokenValidity) {
    this.refreshTokenValidity = refreshTokenValidity;
    return this;
  }

   /**
   * Validity of the refresh token in seconds.
   * @return refreshTokenValidity
  **/
  @ApiModelProperty(example = "null", value = "Validity of the refresh token in seconds.")
  public Integer getRefreshTokenValidity() {
    return refreshTokenValidity;
  }

  public void setRefreshTokenValidity(Integer refreshTokenValidity) {
    this.refreshTokenValidity = refreshTokenValidity;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    OAuthClient oauthClient = (OAuthClient) o;
    return Objects.equals(this.clientId, oauthClient.clientId) &&
        Objects.equals(this.clientSecret, oauthClient.clientSecret) &&
        Objects.equals(this.grantTypes, oauthClient.grantTypes) &&
        Objects.equals(this.redirectUrl, oauthClient.redirectUrl) &&
        Objects.equals(this.accessTokenValidity, oauthClient.accessTokenValidity) &&
        Objects.equals(this.refreshTokenValidity, oauthClient.refreshTokenValidity);
  }

  @Override
  public int hashCode() {
    return Objects.hash(clientId, clientSecret, grantTypes, redirectUrl, accessTokenValidity, refreshTokenValidity);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class OAuthClient {\n");
    
    sb.append("    clientId: ").append(toIndentedString(clientId)).append("\n");
    sb.append("    clientSecret: ").append(toIndentedString(clientSecret)).append("\n");
    sb.append("    grantTypes: ").append(toIndentedString(grantTypes)).append("\n");
    sb.append("    redirectUrl: ").append(toIndentedString(redirectUrl)).append("\n");
    sb.append("    accessTokenValidity: ").append(toIndentedString(accessTokenValidity)).append("\n");
    sb.append("    refreshTokenValidity: ").append(toIndentedString(refreshTokenValidity)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

