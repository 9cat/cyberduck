/*
 * Secure Data Space API
 * Version 4.2.2 - built at: 2017-07-10 11:27:36, API server: https://duck.ssp-europe.eu/api/v4
 *
 * OpenAPI spec version: 4.2.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ch.cyberduck.core.sds.model;

/*
 * Copyright (c) 2002-2017 iterate GmbH. All rights reserved.
 * https://cyberduck.io/
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.fasterxml.jackson.databind.ser.std.DateSerializer;
import com.fasterxml.jackson.databind.util.ISO8601DateFormat;
import io.swagger.annotations.ApiModelProperty;

/**
 * ObjectExpiration
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-08-21T23:28:19.510+02:00")
public class ObjectExpiration {
  public static final class CustomDateSerializer extends DateSerializer {
      public CustomDateSerializer() {
          super(false, new ISO8601DateFormat());
      }
  }

  @JsonProperty("expireAt")
  @JsonSerialize(using = CustomDateSerializer.class)
  private java.util.Date expireAt = null;

  @JsonProperty("enableExpiration")
  private Boolean enableExpiration = null;

  public ObjectExpiration expireAt(java.util.Date expireAt) {
    this.expireAt = expireAt;
    return this;
  }

   /**
   * Expiration date (2015-12-31T23:59:00). Max year is limited to 9999.
   * @return expireAt
  **/
  @ApiModelProperty(value = "Expiration date (2015-12-31T23:59:00). Max year is limited to 9999.")
  public java.util.Date getExpireAt() {
    return expireAt;
  }

  public void setExpireAt(java.util.Date expireAt) {
    this.expireAt = expireAt;
  }

  public ObjectExpiration enableExpiration(Boolean enableExpiration) {
    this.enableExpiration = enableExpiration;
    return this;
  }

   /**
   * enabled/disabled
   * @return enableExpiration
  **/
  @ApiModelProperty(required = true, value = "enabled/disabled")
  public Boolean getEnableExpiration() {
    return enableExpiration;
  }

  public void setEnableExpiration(Boolean enableExpiration) {
    this.enableExpiration = enableExpiration;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ObjectExpiration objectExpiration = (ObjectExpiration) o;
    return Objects.equals(this.expireAt, objectExpiration.expireAt) &&
        Objects.equals(this.enableExpiration, objectExpiration.enableExpiration);
  }

  @Override
  public int hashCode() {
    return Objects.hash(expireAt, enableExpiration);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ObjectExpiration {\n");

    sb.append("    expireAt: ").append(toIndentedString(expireAt)).append("\n");
    sb.append("    enableExpiration: ").append(toIndentedString(enableExpiration)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

