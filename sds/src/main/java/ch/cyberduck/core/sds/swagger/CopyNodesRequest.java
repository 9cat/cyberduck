/*
 * Secure Data Space API
 * Version 4.2.0-SNAPSHOT - built at: 2017-06-29 20:50:38, API server: https://duck.ssp-europe.eu/api/v4
 *
 * OpenAPI spec version: 4.2.0-SNAPSHOT
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ch.cyberduck.core.sds.swagger;

/*
 * Copyright (c) 2002-2017 iterate GmbH. All rights reserved.
 * https://cyberduck.io/
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 */

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonProperty;
import io.swagger.annotations.ApiModelProperty;

/**
 * CopyNodesRequest
 */
public class CopyNodesRequest {
    @JsonProperty("nodeIds")
    private List<Long> nodeIds = new ArrayList<Long>();

    /**
     * Node conflict resolution strategy. (default: autorename)
     */
    public enum ResolutionStrategyEnum {
        @JsonProperty("autorename")
        AUTORENAME("autorename"),

        @JsonProperty("overwrite")
        OVERWRITE("overwrite"),

        @JsonProperty("fail")
        FAIL("fail");

        private String value;

        ResolutionStrategyEnum(String value) {
            this.value = value;
        }

        @Override
        public String toString() {
            return String.valueOf(value);
        }

        @JsonCreator
        public static ResolutionStrategyEnum fromValue(String text) {
            for(ResolutionStrategyEnum b : ResolutionStrategyEnum.values()) {
                if(String.valueOf(b.value).equals(text)) {
                    return b;
                }
            }
            return null;
        }
    }

    @JsonProperty("resolutionStrategy")
    private ResolutionStrategyEnum resolutionStrategy = null;

    @JsonProperty("keepShareLinks")
    private Boolean keepShareLinks = null;

    public CopyNodesRequest nodeIds(List<Long> nodeIds) {
        this.nodeIds = nodeIds;
        return this;
    }

    public CopyNodesRequest addNodeIdsItem(Long nodeIdsItem) {
        this.nodeIds.add(nodeIdsItem);
        return this;
    }

    /**
     * Get nodeIds
     *
     * @return nodeIds
     **/
    @ApiModelProperty(example = "null", required = true, value = "")
    public List<Long> getNodeIds() {
        return nodeIds;
    }

    public void setNodeIds(List<Long> nodeIds) {
        this.nodeIds = nodeIds;
    }

    public CopyNodesRequest resolutionStrategy(ResolutionStrategyEnum resolutionStrategy) {
        this.resolutionStrategy = resolutionStrategy;
        return this;
    }

    /**
     * Node conflict resolution strategy. (default: autorename)
     *
     * @return resolutionStrategy
     **/
    @ApiModelProperty(example = "null", value = "Node conflict resolution strategy. (default: autorename)")
    public ResolutionStrategyEnum getResolutionStrategy() {
        return resolutionStrategy;
    }

    public void setResolutionStrategy(ResolutionStrategyEnum resolutionStrategy) {
        this.resolutionStrategy = resolutionStrategy;
    }

    public CopyNodesRequest keepShareLinks(Boolean keepShareLinks) {
        this.keepShareLinks = keepShareLinks;
        return this;
    }

    /**
     * Preserve download share links and point them to the new node. default: false.
     *
     * @return keepShareLinks
     **/
    @ApiModelProperty(example = "null", value = "Preserve download share links and point them to the new node. default: false.")
    public Boolean getKeepShareLinks() {
        return keepShareLinks;
    }

    public void setKeepShareLinks(Boolean keepShareLinks) {
        this.keepShareLinks = keepShareLinks;
    }


    @Override
    public boolean equals(Object o) {
        if(this == o) {
            return true;
        }
        if(o == null || getClass() != o.getClass()) {
            return false;
        }
        CopyNodesRequest copyNodesRequest = (CopyNodesRequest) o;
        return Objects.equals(this.nodeIds, copyNodesRequest.nodeIds) &&
                Objects.equals(this.resolutionStrategy, copyNodesRequest.resolutionStrategy) &&
                Objects.equals(this.keepShareLinks, copyNodesRequest.keepShareLinks);
    }

    @Override
    public int hashCode() {
        return Objects.hash(nodeIds, resolutionStrategy, keepShareLinks);
    }


    @Override
    public String toString() {
        StringBuilder sb = new StringBuilder();
        sb.append("class CopyNodesRequest {\n");

        sb.append("    nodeIds: ").append(toIndentedString(nodeIds)).append("\n");
        sb.append("    resolutionStrategy: ").append(toIndentedString(resolutionStrategy)).append("\n");
        sb.append("    keepShareLinks: ").append(toIndentedString(keepShareLinks)).append("\n");
        sb.append("}");
        return sb.toString();
    }

    /**
     * Convert the given object to string with each line indented by 4 spaces
     * (except the first line).
     */
    private String toIndentedString(Object o) {
        if(o == null) {
            return "null";
        }
        return o.toString().replace("\n", "\n    ");
    }

}

