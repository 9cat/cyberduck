/*
 * Secure Data Space API
 * Version 4.1.2 - built at: 2017-03-02 18:50:25, API server: https://sds.ssp-europe.eu/api/v4
 *
 * OpenAPI spec version: 4.1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ch.cyberduck.core.sds.io.swagger.client.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * EncryptionInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-03-21T19:15:03.115+01:00")
public class EncryptionInfo {
  /**
   * shows if there is no key/ should be a key/ is a key
   */
  public enum UserkeyStateEnum {
    NONE("none"),
    
    PENDING("pending"),
    
    AVAILABLE("available");

    private String value;

    UserkeyStateEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static UserkeyStateEnum fromValue(String text) {
      for (UserkeyStateEnum b : UserkeyStateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("userkeyState")
  private UserkeyStateEnum userkeyState = null;

  /**
   * shows if there is no key/ should be a key/ is a key
   */
  public enum RoomkeyStateEnum {
    NONE("none"),
    
    PENDING("pending"),
    
    AVAILABLE("available");

    private String value;

    RoomkeyStateEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static RoomkeyStateEnum fromValue(String text) {
      for (RoomkeyStateEnum b : RoomkeyStateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("roomkeyState")
  private RoomkeyStateEnum roomkeyState = null;

  /**
   * shows if there is no key/ should be a key/ is a key
   */
  public enum DataspacekeyStateEnum {
    NONE("none"),
    
    PENDING("pending"),
    
    AVAILABLE("available");

    private String value;

    DataspacekeyStateEnum(String value) {
      this.value = value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static DataspacekeyStateEnum fromValue(String text) {
      for (DataspacekeyStateEnum b : DataspacekeyStateEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }
  }

  @JsonProperty("dataspacekeyState")
  private DataspacekeyStateEnum dataspacekeyState = null;

  public EncryptionInfo userkeyState(UserkeyStateEnum userkeyState) {
    this.userkeyState = userkeyState;
    return this;
  }

   /**
   * shows if there is no key/ should be a key/ is a key
   * @return userkeyState
  **/
  @ApiModelProperty(example = "null", required = true, value = "shows if there is no key/ should be a key/ is a key")
  public UserkeyStateEnum getUserkeyState() {
    return userkeyState;
  }

  public void setUserkeyState(UserkeyStateEnum userkeyState) {
    this.userkeyState = userkeyState;
  }

  public EncryptionInfo roomkeyState(RoomkeyStateEnum roomkeyState) {
    this.roomkeyState = roomkeyState;
    return this;
  }

   /**
   * shows if there is no key/ should be a key/ is a key
   * @return roomkeyState
  **/
  @ApiModelProperty(example = "null", required = true, value = "shows if there is no key/ should be a key/ is a key")
  public RoomkeyStateEnum getRoomkeyState() {
    return roomkeyState;
  }

  public void setRoomkeyState(RoomkeyStateEnum roomkeyState) {
    this.roomkeyState = roomkeyState;
  }

  public EncryptionInfo dataspacekeyState(DataspacekeyStateEnum dataspacekeyState) {
    this.dataspacekeyState = dataspacekeyState;
    return this;
  }

   /**
   * shows if there is no key/ should be a key/ is a key
   * @return dataspacekeyState
  **/
  @ApiModelProperty(example = "null", required = true, value = "shows if there is no key/ should be a key/ is a key")
  public DataspacekeyStateEnum getDataspacekeyState() {
    return dataspacekeyState;
  }

  public void setDataspacekeyState(DataspacekeyStateEnum dataspacekeyState) {
    this.dataspacekeyState = dataspacekeyState;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EncryptionInfo encryptionInfo = (EncryptionInfo) o;
    return Objects.equals(this.userkeyState, encryptionInfo.userkeyState) &&
        Objects.equals(this.roomkeyState, encryptionInfo.roomkeyState) &&
        Objects.equals(this.dataspacekeyState, encryptionInfo.dataspacekeyState);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userkeyState, roomkeyState, dataspacekeyState);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EncryptionInfo {\n");
    
    sb.append("    userkeyState: ").append(toIndentedString(userkeyState)).append("\n");
    sb.append("    roomkeyState: ").append(toIndentedString(roomkeyState)).append("\n");
    sb.append("    dataspacekeyState: ").append(toIndentedString(dataspacekeyState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
  
}

