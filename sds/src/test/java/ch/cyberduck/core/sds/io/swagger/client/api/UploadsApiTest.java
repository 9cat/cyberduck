/*
 * Secure Data Space API
 * Version 4.1.2 - built at: 2017-03-02 18:50:25, API server: https://sds.ssp-europe.eu/api/v4
 *
 * OpenAPI spec version: 4.1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ch.cyberduck.core.sds.io.swagger.client.api;

import ch.cyberduck.core.sds.io.swagger.client.ApiException;
import ch.cyberduck.core.sds.io.swagger.client.model.ChunkUploadResponse;
import ch.cyberduck.core.sds.io.swagger.client.model.CompleteUploadRequest;
import java.io.File;
import ch.cyberduck.core.sds.io.swagger.client.model.Node;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for UploadsApi
 */
@Ignore
public class UploadsApiTest {

    private final UploadsApi api = new UploadsApi();

    
    /**
     * Cancel file upload
     *
     * &lt;div class&#x3D;\&quot;sds\&quot;&gt;&lt;p&gt;&lt;strong&gt;Functional Description:&lt;/strong&gt; &lt;br/&gt;Cancel file upload.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Precondition:&lt;/strong&gt; Valid upload token.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Effects:&lt;/strong&gt; Upload canceled, token invalidated and all already transfered chunks removed.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Further Information:&lt;/strong&gt; It is recommended to notify the API about cancelled uploads if possible.&lt;/p&gt;&lt;/div&gt;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void cancelFileUploadByTokenTest() throws ApiException {
        String token = null;
        api.cancelFileUploadByToken(token);

        // TODO: test validations
    }
    
    /**
     * Complete file upload
     *
     * &lt;div class&#x3D;\&quot;sds\&quot;&gt;&lt;p&gt;&lt;strong&gt;Functional Description:&lt;/strong&gt; &lt;br/&gt;Finish uploading a file.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Precondition:&lt;/strong&gt; Valid upload token.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Effects:&lt;/strong&gt; File created.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Further Information:&lt;/strong&gt; The provided file name might be changed in accordance with the resolution strategy:&lt;ul&gt;&lt;li&gt;&#39;autorename&#39; changes the file name and adds a number to avoid conflicts.&lt;/li&gt;&lt;li&gt;&#39;overwrite&#39; deletes any old file with the same file name.&lt;/li&gt;&lt;li&gt;&#39;fail&#39; returns an error. In this case, another PUT request with a different file name may be sent.&lt;/li&gt;&lt;/ul&gt;&lt;/br&gt;Please ensure that all chunks have been transferred correctly before finishing the upload.&lt;/p&gt;&lt;/div&gt;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void completeFileUploadByTokenTest() throws ApiException {
        String token = null;
        String xSdsDateFormat = null;
        CompleteUploadRequest body = null;
        Node response = api.completeFileUploadByToken(token, xSdsDateFormat, body);

        // TODO: test validations
    }
    
    /**
     * Upload file by token
     *
     * &lt;div class&#x3D;\&quot;sds\&quot;&gt;&lt;p&gt;&lt;strong&gt;Functional Description:&lt;/strong&gt; &lt;br/&gt;Upload a chunk of a file.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Precondition:&lt;/strong&gt; Valid upload token.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Effects:&lt;/strong&gt; Chunk uploaded.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Further Information:&lt;/strong&gt; Use this API if you cannot set custom headers during uploads. Range requests are supported (please cf. &lt;a href&#x3D;\&quot;https://tools.ietf.org/html/rfc7233\&quot; target&#x3D;\&quot;_blank\&quot;&gt;RCF 7233&lt;/a&gt; for details).&lt;/p&gt;&lt;/div&gt;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void uploadFileByTokenTest() throws ApiException {
        String token = null;
        File file = null;
        String contentRange = null;
        ChunkUploadResponse response = api.uploadFileByToken(token, file, contentRange);

        // TODO: test validations
    }
    
}
