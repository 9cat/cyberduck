/*
 * Secure Data Space API
 * Version 4.1.2 - built at: 2017-03-02 18:50:25, API server: https://sds.ssp-europe.eu/api/v4
 *
 * OpenAPI spec version: 4.1.2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package ch.cyberduck.core.sds.io.swagger.client.api;

import ch.cyberduck.core.sds.io.swagger.client.ApiException;
import ch.cyberduck.core.sds.io.swagger.client.model.CreateDownloadShareRequest;
import ch.cyberduck.core.sds.io.swagger.client.model.CreateUploadShareRequest;
import ch.cyberduck.core.sds.io.swagger.client.model.DownloadShare;
import ch.cyberduck.core.sds.io.swagger.client.model.DownloadShareList;
import ch.cyberduck.core.sds.io.swagger.client.model.UploadShare;
import ch.cyberduck.core.sds.io.swagger.client.model.UploadShareList;
import org.junit.Test;
import org.junit.Ignore;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for SharesApi
 */
@Ignore
public class SharesApiTest {

    private final SharesApi api = new SharesApi();

    
    /**
     * Create new download share
     *
     * &lt;div class&#x3D;\&quot;sds\&quot;&gt;&lt;p&gt;&lt;strong&gt;Functional Description:&lt;/strong&gt; &lt;br/&gt;Create a new Download Share.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Precondition:&lt;/strong&gt; Manage download shares permission on target node.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Effects:&lt;/strong&gt; Download Share created.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Further Information:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Access password:&lt;/b&gt; Passwords are limited to 150 characters.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Notes:&lt;/b&gt; Notes are limited to 255 characters.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Alias Names:&lt;/b&gt; Alias names are limited to 150 characters.&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;&lt;/div&gt;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createDownloadShareTest() throws ApiException {
        String xSdsAuthToken = null;
        CreateDownloadShareRequest body = null;
        String xSdsDateFormat = null;
        DownloadShare response = api.createDownloadShare(xSdsAuthToken, body, xSdsDateFormat);

        // TODO: test validations
    }
    
    /**
     * Create new upload share
     *
     * &lt;div class&#x3D;\&quot;sds\&quot;&gt;&lt;p&gt;&lt;strong&gt;Functional Description:&lt;/strong&gt; &lt;br/&gt;Create a new Upload Share (aka Upload Account).&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Precondition:&lt;/strong&gt; Manage Upload Shares permission on target container.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Effects:&lt;/strong&gt; Upload Share is created.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Further Information:&lt;/strong&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Notes:&lt;/b&gt; Notes are limited to 255 characters.&lt;/li&gt;&lt;li&gt;&lt;b&gt;Alias Names:&lt;/b&gt; Alias names are limited to 150 characters.&lt;/li&gt;&lt;li&gt;&lt;div&gt;&lt;b&gt;Send Mail:&lt;/b&gt; Following fields are optional, if &lt;dfn&gt;&amp;lt;sendMail&amp;gt;&lt;/dfn&gt; is set to false: &lt;dfn&gt;&amp;lt;mailRecipients&amp;gt; &amp;lt;mailSubject&amp;gt; &amp;lt;mailBody&amp;gt;&lt;/dfn&gt;.&lt;br/&gt;If &lt;dfn&gt;&amp;lt;sendMail&amp;gt;&lt;/dfn&gt; is set to true, these fields are mandatory fields:  &lt;dfn&gt;&amp;lt;mailRecipients&amp;gt; &amp;lt;mailSubject&amp;gt; &amp;lt;mailBody&amp;gt;&lt;/dfn&gt;.&lt;/div&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/p&gt;&lt;/div&gt;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void createUploadShareTest() throws ApiException {
        String xSdsAuthToken = null;
        CreateUploadShareRequest body = null;
        String xSdsDateFormat = null;
        UploadShare response = api.createUploadShare(xSdsAuthToken, body, xSdsDateFormat);

        // TODO: test validations
    }
    
    /**
     * Delete download share
     *
     * &lt;div class&#x3D;\&quot;sds\&quot;&gt;&lt;p&gt;&lt;strong&gt;Functional Description:&lt;/strong&gt; &lt;br/&gt;Delete a Download Share.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Precondition:&lt;/strong&gt; None.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Effects:&lt;/strong&gt; Download Share is deleted.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Further Information:&lt;/strong&gt; Only the Download Share is removed; the referenced file or container persists.&lt;/p&gt;&lt;/div&gt;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteDownloadShareTest() throws ApiException {
        String xSdsAuthToken = null;
        Long shareId = null;
        api.deleteDownloadShare(xSdsAuthToken, shareId);

        // TODO: test validations
    }
    
    /**
     * Delete upload share
     *
     * &lt;div class&#x3D;\&quot;sds\&quot;&gt;&lt;p&gt;&lt;strong&gt;Functional Description:&lt;/strong&gt; &lt;br/&gt;Delete an Upload Share (aka Upload Account).&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Precondition:&lt;/strong&gt; None.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Effects:&lt;/strong&gt; Upload Share is deleted.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Further Information:&lt;/strong&gt; Only the Upload Share is removed; already uploaded files and the target container persist.&lt;/p&gt;&lt;/div&gt;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void deleteUploadShareTest() throws ApiException {
        String xSdsAuthToken = null;
        Long shareId = null;
        api.deleteUploadShare(xSdsAuthToken, shareId);

        // TODO: test validations
    }
    
    /**
     * Get download share
     *
     * &lt;div class&#x3D;\&quot;sds\&quot;&gt;&lt;p&gt;&lt;strong&gt;Functional Description:&lt;/strong&gt; &lt;br/&gt;Retrieve detailed information about one Download Share.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Precondition:&lt;/strong&gt; None.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Effects:&lt;/strong&gt; None.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Further Information:&lt;/strong&gt; None.&lt;/p&gt;&lt;/div&gt;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDownloadShareTest() throws ApiException {
        String xSdsAuthToken = null;
        Long shareId = null;
        String xSdsDateFormat = null;
        DownloadShare response = api.getDownloadShare(xSdsAuthToken, shareId, xSdsDateFormat);

        // TODO: test validations
    }
    
    /**
     * Get download shares
     *
     * &lt;div class&#x3D;\&quot;sds\&quot;&gt;&lt;p&gt;&lt;strong&gt;Functional Description:&lt;/strong&gt; &lt;br/&gt;Retrieve a list of Download Shares.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Precondition:&lt;/strong&gt; None.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Effects:&lt;/strong&gt; None.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Further Information:&lt;/strong&gt; None.&lt;/p&gt;&lt;h4&gt;Filters&lt;/h4&gt;&lt;p&gt;Filter string syntax: &lt;dfn&gt;&amp;lt;FIELD_NAME&amp;gt;:&amp;lt;OPERATOR&amp;gt;:&amp;lt;VALUE&amp;gt;&lt;/dfn&gt;&lt;br/&gt;Multiple fields is supported.&lt;/p&gt;&lt;h5&gt;Filter fields:&lt;/h5&gt;&lt;dl&gt;&lt;dt&gt;name&lt;/dt&gt;&lt;dd&gt;Alias Name or File Name&lt;br/&gt;OPERATOR: &lt;code&gt;cn&lt;/code&gt; ( name contains value)&lt;br/&gt;VALUE: &lt;code&gt;Search string&lt;/code&gt;&lt;/dd&gt;&lt;dt&gt;createdBy&lt;/dt&gt;&lt;dd&gt;Creator info&lt;br/&gt;OPERATOR: &lt;code&gt;cn&lt;/code&gt; (Creator info (login, email, firstName, lastName ) contains value)&lt;br/&gt;VALUE: &lt;code&gt;Search string&lt;/code&gt;&lt;/dd&gt;&lt;dt&gt;accessKey&lt;/dt&gt;&lt;dd&gt;Share access key&lt;br/&gt;OPERATOR: &lt;code&gt;cn&lt;/code&gt; (Share access key contains value)&lt;br/&gt;VALUE: &lt;code&gt;Search string&lt;/code&gt;&lt;/dd&gt;&lt;dt&gt;nodeId&lt;/dt&gt;&lt;dd&gt;Source node ID&lt;br/&gt;OPERATOR: &lt;code&gt;eq&lt;/code&gt; (Source file/folder/Room/SubRoom ID)&lt;br/&gt;VALUE: &lt;code&gt;Search node ID&lt;/code&gt;&lt;/dd&gt;&lt;dt&gt;userId&lt;/dt&gt;&lt;dd&gt;Creator user ID&lt;br/&gt;OPERATOR: &lt;code&gt;eq&lt;/code&gt;&lt;br/&gt;VALUE: &lt;code&gt;Search user ID&lt;/code&gt;&lt;/dd&gt;&lt;/dl&gt;&lt;p&gt;Example: &lt;samp&gt;name:cn:searchString_1|createdBy:cn:searchString_2|nodeId:eq:1 &lt;/samp&gt;&lt;br/&gt;- filter by file name contains searchString_1 or creator info (login, email, firstName, lastName ) contains searchString_2 or node ID is equal to 1&lt;/p&gt;&lt;h4&gt;Sorting&lt;/h4&gt;&lt;p&gt;Sort string syntax: &lt;dfn&gt;&amp;lt;FIELD_NAME&amp;gt;:&amp;lt;ORDER&amp;gt;&lt;/dfn&gt;&lt;br/&gt;Order can be &lt;code&gt;asc&lt;/code&gt; or &lt;code&gt;desc&lt;/code&gt;&lt;br/&gt;Multiple fields is supported.&lt;/p&gt;&lt;h5&gt;Sort fields:&lt;/h5&gt;&lt;dl&gt;&lt;dt&gt;name&lt;/dt&gt;&lt;dd&gt;Alias Name or File Name&lt;/dd&gt;&lt;dt&gt;classification&lt;/dt&gt;&lt;dd&gt;File classification&lt;/dd&gt;&lt;dt&gt;notifyCreator&lt;/dt&gt;&lt;dd&gt;Notify creator on every download&lt;/dd&gt;&lt;dt&gt;expireAt&lt;/dt&gt;&lt;dd&gt;Expiration date&lt;/dd&gt;&lt;dt&gt;createdAt&lt;/dt&gt;&lt;dd&gt;Creation date&lt;/dd&gt;&lt;dt&gt;createdBy&lt;/dt&gt;&lt;dd&gt;Creator info&lt;/dd&gt;&lt;/dl&gt;&lt;p&gt;Example: &lt;samp&gt;name:asc|expireAt:desc&lt;/samp&gt;&lt;br/&gt;- sort by name ascending and by expireAt descending&lt;/p&gt;&lt;/div&gt;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getDownloadSharesTest() throws ApiException {
        String xSdsAuthToken = null;
        String xSdsDateFormat = null;
        Integer offset = null;
        Integer limit = null;
        String filter = null;
        String sort = null;
        DownloadShareList response = api.getDownloadShares(xSdsAuthToken, xSdsDateFormat, offset, limit, filter, sort);

        // TODO: test validations
    }
    
    /**
     * Get upload share
     *
     * &lt;div class&#x3D;\&quot;sds\&quot;&gt;&lt;p&gt;&lt;strong&gt;Functional Description:&lt;/strong&gt; &lt;br/&gt;Retrieve detailed information about one Upload Share (aka Upload Account).&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Precondition:&lt;/strong&gt; None.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Effects:&lt;/strong&gt; None.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Further Information:&lt;/strong&gt; None.&lt;/p&gt;&lt;/div&gt;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUploadShareTest() throws ApiException {
        String xSdsAuthToken = null;
        Long shareId = null;
        String xSdsDateFormat = null;
        UploadShare response = api.getUploadShare(xSdsAuthToken, shareId, xSdsDateFormat);

        // TODO: test validations
    }
    
    /**
     * Get upload shares
     *
     * &lt;div class&#x3D;\&quot;sds\&quot;&gt;&lt;p&gt;&lt;strong&gt;Functional Description:&lt;/strong&gt; &lt;br/&gt;Retrieve a list of Upload Shares (aka Upload Accounts).&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Precondition:&lt;/strong&gt; None.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Effects:&lt;/strong&gt; None.&lt;/p&gt;&lt;p&gt;&lt;strong&gt;Further Information:&lt;/strong&gt; None.&lt;/p&gt;&lt;h4&gt;Filters&lt;/h4&gt;&lt;p&gt;Filter string syntax: &lt;dfn&gt;&amp;lt;FIELD_NAME&amp;gt;:&amp;lt;OPERATOR&amp;gt;:&amp;lt;VALUE&amp;gt;&lt;/dfn&gt;&lt;br/&gt;Multiple fields is supported.&lt;/p&gt;&lt;h5&gt;Filter fields:&lt;/h5&gt;&lt;dl&gt;&lt;dt&gt;name&lt;/dt&gt;&lt;dd&gt;Alias name&lt;br/&gt;OPERATOR: &lt;code&gt;cn&lt;/code&gt; (Alias name contains value)&lt;br/&gt;VALUE: &lt;code&gt;Search string&lt;/code&gt;&lt;/dd&gt;&lt;dt&gt;createdBy&lt;/dt&gt;&lt;dd&gt;Creator info&lt;br/&gt;OPERATOR: &lt;code&gt;cn&lt;/code&gt; (Creator info (login, email, firstName, lastName ) contains value)&lt;br/&gt;VALUE: &lt;code&gt;Search string&lt;/code&gt;&lt;/dd&gt;&lt;dt&gt;accessKey&lt;/dt&gt;&lt;dd&gt;Share access key&lt;br/&gt;OPERATOR: &lt;code&gt;cn&lt;/code&gt; (Share access key contains value)&lt;br/&gt;VALUE: &lt;code&gt;Search string&lt;/code&gt;&lt;/dd&gt;&lt;dt&gt;targetId&lt;/dt&gt;&lt;dd&gt;Target node Room/SubRoom/Folder&lt;br/&gt;OPERATOR: &lt;code&gt;cn&lt;/code&gt; (Target node contains value)&lt;br/&gt;VALUE: &lt;code&gt;Search string&lt;/code&gt;&lt;/dd&gt;&lt;dt&gt;userId&lt;/dt&gt;&lt;dd&gt;Creator user ID&lt;br/&gt;OPERATOR: &lt;code&gt;eq&lt;/code&gt;&lt;br/&gt;VALUE: &lt;code&gt;Search user ID&lt;/code&gt;&lt;/dd&gt;&lt;/dl&gt;&lt;p&gt;Example: &lt;samp&gt;name:cn:searchString_1|createdBy:cn:searchString_2 &lt;/samp&gt;&lt;br/&gt;- filter by alias name contains searchString_1 or creator info (login, email, firstName, lastName ) contains searchString_2&lt;/p&gt;&lt;h4&gt;Sorting&lt;/h4&gt;&lt;p&gt;Sort string syntax: &lt;dfn&gt;&amp;lt;FIELD_NAME&amp;gt;:&amp;lt;ORDER&amp;gt;&lt;/dfn&gt;&lt;br/&gt;Order can be &lt;code&gt;asc&lt;/code&gt; or &lt;code&gt;desc&lt;/code&gt;&lt;br/&gt;Multiple fields is supported.&lt;/p&gt;&lt;h5&gt;Sort fields:&lt;/h5&gt;&lt;dl&gt;&lt;dt&gt;name&lt;/dt&gt;&lt;dd&gt;Alias name&lt;/dd&gt;&lt;dt&gt;expireAt&lt;/dt&gt;&lt;dd&gt;Expiration date&lt;/dd&gt;&lt;dt&gt;notifyCreator&lt;/dt&gt;&lt;dd&gt;Notify creator on every upload.&lt;/dd&gt;&lt;dt&gt;createdAt&lt;/dt&gt;&lt;dd&gt;Creation date&lt;/dd&gt;&lt;dt&gt;createdBy&lt;/dt&gt;&lt;dd&gt;Creator info&lt;/dd&gt;&lt;/dl&gt;&lt;p&gt;Example: &lt;samp&gt;name:asc|expireAt:desc&lt;/samp&gt;&lt;br/&gt;- sort by name ascending and by expireAt descending&lt;/p&gt;&lt;/div&gt;
     *
     * @throws ApiException
     *          if the Api call fails
     */
    @Test
    public void getUploadSharesTest() throws ApiException {
        String xSdsAuthToken = null;
        String xSdsDateFormat = null;
        Integer offset = null;
        Integer limit = null;
        String filter = null;
        String sort = null;
        UploadShareList response = api.getUploadShares(xSdsAuthToken, xSdsDateFormat, offset, limit, filter, sort);

        // TODO: test validations
    }
    
}
