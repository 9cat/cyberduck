<?xml version="1.0" encoding="UTF-8"?>
<!--
 *	Simple Ant (http://jakarta.apache.org/ant) build script for Cyberduck
 *
 *	$Revision$
 *	$Date$
 *
 *  Copyright (c) 2005-2012 David Kocher. All rights reserved.
 *  http://cyberduck.io/
 *
 *	This program is free software; you can redistribute it and/or modify
 *	it under the terms of the GNU General Public License as published by
 *	the Free Software Foundation; either version 2 of the License, or
 *	(at your option) any later version.
 *
 *	This program is distributed in the hope that it will be useful,
 *	but WITHOUT ANY WARRANTY; without even the implied warranty of
 *	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *	GNU General Public License for more details.
 *
 *	Bug fixes, suggestions and comments should be sent to:
 *	dkocher@cyberduck.io
 -->
<project name="Cyberduck for Windows" basedir=".">

    <import file="build.xml"/>

    <!-- try to detect the process architecture (32/64bit) -->
    <condition property="programFiles" value="${env.ProgramFiles(x86)}">
        <available file="${env.ProgramFiles(x86)}"/>
    </condition>
    <condition property="programFiles" value="${env.ProgramFiles}">
        <available file="${env.ProgramFiles}"/>
    </condition>

    <property name="architecture" value="x86"/>
    <property name="setup" value="${home}/setup"/>
    <property name="nsis.home" value="${programFiles}/NSIS"/>
    <property name="winsdk.home" value="${programFiles}/Windows Kits/8.0/bin/x86"/>
    <property name="wybuild.home" value="${programFiles}/wyBuild"/>
    <property name="app.icon" value="cyberduck-application.ico"/>

    <property name="cli.bundles" value="all"/>

    <property name="jvm.runtime.bundle.home" value="${java.home}"/>

    <taskdef name="msbuild" classname="org.apache.ant.dotnet.build.MSBuildTask">
        <classpath path="${lib.ext}/ant-dotnet-1.1.jar"/>
    </taskdef>

    <target name="version" depends="revision">
        <taskdef resource="net/sf/antcontrib/antcontrib.properties">
            <classpath path="${lib.ext}/ant-contrib-1.0b3.jar"/>
        </taskdef>
        <propertyregex property="minor"
                       input="${cyberduck.version.minor}.0"
                       regexp="(\d)([\w\d]*)\.(\d)(\.\d)?"
                       select="\1.\3"/>
        <property name="version.full"
                  value="${cyberduck.version.major}.${minor}.${svn.revision}"/>
        <property name="version.short"
                  value="${version} (${svn.revision})"/>
        <!-- pattern = "[revision] ([major].[minor])" -->
        <property name="updaterversion"
                  value="${svn.revision} (${version})"/>
    </target>

    <target name="_build" depends="dll">
        <msbuild buildfile="source/ch/cyberduck/Cyberduck.csproj">
            <target name="Clean"/>
            <target name="Build"/>

            <property name="Version" value="${version.full}"/>
            <property name="ShortVersion" value="${version.short}"/>
            <property name="Configuration" value="${configuration}"/>
            <property name="Platform" value="${architecture}"/>
        </msbuild>
    </target>

    <target name="_cli" depends="dll">
        <msbuild buildfile="source/ch/cyberduck/CLI-WiX-Bootstrapper.wixproj">
            <target name="Clean"/>
            <target name="Build"/>

            <property name="Version" value="${version.full}"/>
            <property name="ShortVersion" value="${version.short}"/>
            <property name="Configuration" value="${configuration}"/>
            <property name="Platform" value="${architecture}"/>
        </msbuild>
    </target>

    <target name="dll" depends="version, archive">
        <taskdef name="ikvmc" classname="net.ikvm.ant.IkvmcTask">
            <classpath path="${lib.ext}/ant-ikvmc.0.5.jar"/>
        </taskdef>
        <ikvmc target="library" out="${build}/core.dll" home="${ikvm.home}"
               version="${version.full}" debug="false" verbose="true">
            <fileset file="${build}/config.jar"/>
            <fileset file="${build}/core.jar"/>
            <fileset file="${build}/cli.jar"/>
            <fileset file="${build}/ui.jar"/>
            <fileset dir="${lib}">
                <include name="*.jar"/>
                <exclude name="asm-*.jar"/>
                <exclude name="cglib-*.jar"/>
                <exclude name="dns_sd.jar"/>
                <exclude name="rococoa-*.jar"/>
            </fileset>
            <resource name="/com/sun/jna/win32-x86/jnidispatch.dll" path="${lib}/jnidispatch.dll"/>
        </ikvmc>
    </target>

    <target name="release" depends="version">
        <property name="setup.file"
                  location="${build.deploy}/${app.name}-Installer-${version}.exe"/>
        <antcall target="package">
            <param name="changelog.wyp" value="${www.update}/changelog.wyp"/>
        </antcall>
    </target>

    <target name="nightly" depends="version">
        <property name="setup.file"
                  location="${build.deploy}/${app.name}-Installer-${version}.${svn.revision}.exe"/>
        <antcall target="package">
            <param name="changelog.wyp" value="${www.update}/changelog-nightly.wyp"/>
        </antcall>
    </target>

    <target name="beta" depends="version">
        <property name="setup.file"
                  location="${build.deploy}/${app.name}-Installer-${version}.${svn.revision}.exe"/>
        <antcall target="package">
            <param name="changelog.wyp" value="${www.update}/changelog-beta.wyp"/>
        </antcall>
    </target>

    <target name="package" depends="dll, build">
        <loadfile property="changes" srcFile="${www.update}/changelog.txt"/>

        <copy file="${www.update}/version.xml" todir="${build.deploy}" overwrite="true"/>
        <replace file="${build.deploy}/version.xml" summary="true" encoding="UTF-8">
            <replacefilter token="${VERSION}" value="${updaterversion}"/>
            <replacefilter token="${CHANGES}" value="${changes}"/>
            <replacefilter token="${BUILDPATH}" value="${build}"/>
        </replace>

        <!-- copy wyUpdate project over to the build directory -->
        <copy file="${changelog.wyp}" tofile="${build.deploy}/changelog.wyp" overwrite="true"/>

        <exec executable="${wybuild.home}/wybuild.cmd.exe" failonerror="true" dir="${build.deploy}">
            <arg value="${build.deploy}/changelog.wyp"/>
            <arg value="/bwu"/>
            <arg value="/bu"/>
            <arg value="-add=${build.deploy}/version.xml"/>
        </exec>

        <!-- overwrite generated wyUpdate.exe -->
        <copy file="${www.update}/Updater.exe" todir="${build.deploy}/update" overwrite="true"/>

        <antcall target="setup"/>
    </target>

    <target name="updater-release">
        <!-- Updater .NET4 build -->
        <msbuild buildfile="${wyupdate.home}/wyUpdate.NET4.csproj">
            <target name="Clean"/>
            <target name="Build"/>
            <property name="Configuration" value="Release"/>
            <property name="Platform" value="x86"/>
        </msbuild>

        <copy file="${wyupdate.home}/bin4/Release/wyUpdate.exe" tofile="${www.update}/Updater.exe"/>
        <!-- sign wyUpdate.exe with our code signing certificate -->
        <exec executable="${winsdk.home}/signtool.exe" failonerror="true">
            <arg line='sign /r "StartCom" /tr http://timestamp.globalsign.com/scripts/timestamp.dll "${www.update}/Updater.exe"'/>
        </exec>

        <copy file="${www.update}/updater.xml" todir="${build.deploy}" overwrite="true"/>
        <replace file="${build.deploy}/updater.xml" summary="true" encoding="UTF-8">
            <replacefilter token="_VERSION_" value="${updater.version}"/>
        </replace>

        <!-- copy wyUpdate project over to the build directory -->
        <copy file="${www.update}/updater.wyp" todir="${build.deploy}" overwrite="true"/>
        <copy file="${www.update}/Updater.exe" todir="${build.deploy}/update" overwrite="true"/>

        <exec executable="${wybuild.home}/wybuild.cmd.exe" failonerror="true">
            <arg value="${build.deploy}/updater.wyp"/>
            <arg value="/bu"/>
            <arg value="-add=${build.deploy}/updater.xml"/>
        </exec>

        <scp file="${build.deploy}/update/${app.name}Updater-all-${updater.version}.wyu"
             todir="dkocher@update.cyberduck.io:./update.cyberduck.io/windows/update"
             keyfile="${user.home}/.ssh/update.cyberduck.io-rsa"
             passphrase="">
        </scp>
        <!-- Changelog Release - version.cyberduck.io -->
        <scp file="${build.deploy}/update/updater.wys"
             todir="dkocher@version.cyberduck.io:./version.cyberduck.io/"
             keyfile="${user.home}/.ssh/version.cyberduck.io-rsa"
             passphrase="">
        </scp>

    </target>

    <target name="setup">
        <exec executable="${nsis.home}/makensis" failonerror="true">
            <arg value="/DBASEDIR=${build}"/>
            <arg value="/DPRODUCT_VERSION=${version.short}"/>
            <arg value="/DSETUPFILE=${setup.file}"/>
            <arg value="${setup}/cyberduck.nsi"/>
        </exec>
        <exec executable="${winsdk.home}/signtool.exe" failonerror="true">
            <arg line='sign /r "StartCom" /tr http://timestamp.globalsign.com/scripts/timestamp.dll "${setup.file}"'/>
        </exec>
        <checksum file="${setup.file}" algorithm="md5"/>
    </target>
</project>
